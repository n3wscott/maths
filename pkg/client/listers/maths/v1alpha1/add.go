/*
Copyright 2021 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "tableflip.dev/maths/pkg/apis/maths/v1alpha1"
)

// AddLister helps list Adds.
// All objects returned here must be treated as read-only.
type AddLister interface {
	// List lists all Adds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Add, err error)
	// Adds returns an object that can list and get Adds.
	Adds(namespace string) AddNamespaceLister
	AddListerExpansion
}

// addLister implements the AddLister interface.
type addLister struct {
	indexer cache.Indexer
}

// NewAddLister returns a new AddLister.
func NewAddLister(indexer cache.Indexer) AddLister {
	return &addLister{indexer: indexer}
}

// List lists all Adds in the indexer.
func (s *addLister) List(selector labels.Selector) (ret []*v1alpha1.Add, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Add))
	})
	return ret, err
}

// Adds returns an object that can list and get Adds.
func (s *addLister) Adds(namespace string) AddNamespaceLister {
	return addNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AddNamespaceLister helps list and get Adds.
// All objects returned here must be treated as read-only.
type AddNamespaceLister interface {
	// List lists all Adds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Add, err error)
	// Get retrieves the Add from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Add, error)
	AddNamespaceListerExpansion
}

// addNamespaceLister implements the AddNamespaceLister
// interface.
type addNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Adds in the indexer for a given namespace.
func (s addNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Add, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Add))
	})
	return ret, err
}

// Get retrieves the Add from the indexer for a given namespace and name.
func (s addNamespaceLister) Get(name string) (*v1alpha1.Add, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("add"), name)
	}
	return obj.(*v1alpha1.Add), nil
}
